name: Manual Release Workflow

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (e.g., v0.16-cannary-1)'
        required: true

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Necessary to fetch all history for tags

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Generate Release Notes
        id: generate_notes
        run: |
          IMPROVEMENTS=""
          BUGS=""
          OTHERS=""
          IMPROVEMENTS_COUNT=0
          BUGS_COUNT=0
          OTHERS_COUNT=0

          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            COMMITS=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%s|%h")
          else
            COMMITS=$(git log --pretty=format:"%s|%h")
          fi
          
          OLD_IFS=$IFS
          IFS=$'\n'

          for commit in $COMMITS; do
            IFS="|" read -r commit_message hash <<< "$commit"
            normalized_message=$(echo "$commit_message" | tr '[:upper:]' '[:lower:]')
            if echo "$normalized_message" | grep -qE '^(merge|chore)'; then
              continue
            fi
            if ! echo "$commit_message" | grep -qE '#[0-9]+'; then
              continue
            fi
            PR_NUMBER=$(echo $commit_message | grep -o -E "#\d+" || echo "")
            CLEAN_MESSAGE=$(echo $commit_message | sed -E "s/#[0-9]+//; s/^(feat|refactor|fix|chore): //I; s/^([Ff]eat|[Rr]efactor|[Ff]ix|[Cc]hore) //I; s/^\[.*\] //; s/[:\-] / /; s/\(\) //")
            CLEAN_MESSAGE="$(tr '[:lower:]' '[:upper:]' <<< ${CLEAN_MESSAGE:0:1})${CLEAN_MESSAGE:1}."
            CLEAN_MESSAGE=$(echo $CLEAN_MESSAGE | sed 's/()//g') # Remove empty brackets
            if [[ $IMPROVEMENTS_COUNT -lt 30 && ($normalized_message =~ ^feat|^refactor) ]]; then
              IMPROVEMENTS+="- $CLEAN_MESSAGE $PR_NUMBER\n"
              ((IMPROVEMENTS_COUNT++))
            elif [[ $BUGS_COUNT -lt 30 && $normalized_message =~ ^fix ]]; then
              BUGS+="- $CLEAN_MESSAGE $PR_NUMBER\n"
              ((BUGS_COUNT++))
            elif [[ $OTHERS_COUNT -lt 30 ]]; then
              OTHERS+="- $CLEAN_MESSAGE $PR_NUMBER\n"
              ((OTHERS_COUNT++))
            fi
          done
          IFS=$OLD_IFS
          {
            echo '## What Changed'
            [[ ! -z "$IMPROVEMENTS" ]] && echo "## Improvements\n$IMPROVEMENTS"
            [[ ! -z "$BUGS" ]] && echo "## Bugs\n$BUGS"
            [[ ! -z "$OTHERS" ]] && echo -e "## Others\n$OTHERS"
          } > RELEASE_NOTES.md

          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat RELEASE_NOTES.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
      - name: Create Tag
        run: |
          git tag ${{ github.event.inputs.release_tag }}
          git push origin ${{ github.event.inputs.release_tag }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ env. RELEASE_NOTES }}
          prerelease: true
          generateReleaseNotes: true





