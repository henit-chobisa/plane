name: Manual Release Workflow

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (e.g., v0.16-cannary-1)'
        required: true

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Necessary to fetch all history for tags

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Generate Release Notes
        id: generate_notes
        run: |
          IMPROVEMENTS=""
          BUGS=""
          OTHERS=""
          AUTHORS=()

          # Fetch all commits from the last tag to HEAD
          COMMITS=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%s|%an|%h")

          # Loop through each commit to categorize
          echo "$COMMITS" | while IFS="|" read -r commit_message author hash; do
            PR_NUMBER=$(echo $commit_message | grep -o -E "\(#\d+\)" || echo "")
            CLEAN_MESSAGE=$(echo $commit_message | sed -E "s/^(feat|refactor|fix): //; s/^(Feat|Refactor|Fix): //; s/^([Ff]eat|[Rr]efactor|[Ff]ix) //; s/^\[.*\] //; s/[:\-] / /" | tr '[:lower:]' '[:upper:]')
          if [[ $commit_message == feat:* || $commit_message == refactor:* ]]; then
            IMPROVEMENTS+="- $PR_NUMBER $CLEAN_MESSAGE by [$author](https://github.com/${{ github.repository }}/commit/$hash)\n"
          elif [[ $commit_message == fix:* ]]; then
            BUGS+="- $PR_NUMBER $CLEAN_MESSAGE by [$author](https://github.com/${{ github.repository }}/commit/$hash)\n"
          else
            OTHERS+="- $PR_NUMBER $CLEAN_MESSAGE by [$author](https://github.com/${{ github.repository }}/commit/$hash)\n"
          fi
          AUTHORS+=("$author")
          done

          # Remove duplicate authors
          AUTHORS=($(echo "${AUTHORS[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))

          # Generate the release notes
          {
            echo '## What Changed'
            [[ ! -z "$IMPROVEMENTS" ]] && echo -e "## Improvements\n$IMPROVEMENTS"
            [[ ! -z "$BUGS" ]] && echo -e "## Bugs\n$BUGS"
            [[ ! -z "$OTHERS" ]] && echo -e "## Others\n$OTHERS"
            echo -e "\nThanks to all our contributors - @${AUTHORS[*]// /, @}."
          } > RELEASE_NOTES.md

          # Truncate to 30000 characters if necessary and add to GITHUB_ENV
          RELEASE_NOTES=" $(<RELEASE_NOTES.md)"
          RELEASE_NOTES_TRUNCATED=$(echo "$RELEASE_NOTES" | head -c 30000)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES_TRUNCATED" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Tag
        run: |
          git tag ${{ github.event.inputs.release_tag }}
          git push origin ${{ github.event.inputs.release_tag }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ env. RELEASE_NOTES }}
          prerelease: true
          generateReleaseNotes: true





